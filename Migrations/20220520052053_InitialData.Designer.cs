// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using efcore_project;

#nullable disable

namespace efcore_project.Migrations
{
    [DbContext(typeof(HomeworksContext))]
    [Migration("20220520052053_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("efcore_project.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Effort")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c657"),
                            Effort = 20,
                            Name = "Pending activities"
                        },
                        new
                        {
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c602"),
                            Effort = 50,
                            Name = "Personal activities"
                        });
                });

            modelBuilder.Entity("efcore_project.Models.Homework", b =>
                {
                    b.Property<Guid>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityHomework")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Homework", (string)null);

                    b.HasData(
                        new
                        {
                            HomeworkId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c100"),
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c657"),
                            CreationDate = new DateTime(2022, 5, 19, 23, 20, 53, 64, DateTimeKind.Local).AddTicks(757),
                            PriorityHomework = 1,
                            Title = "Payment of public services"
                        },
                        new
                        {
                            HomeworkId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c101"),
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c602"),
                            CreationDate = new DateTime(2022, 5, 19, 23, 20, 53, 64, DateTimeKind.Local).AddTicks(774),
                            PriorityHomework = 0,
                            Title = "Finish watching movie"
                        });
                });

            modelBuilder.Entity("efcore_project.Models.Homework", b =>
                {
                    b.HasOne("efcore_project.Models.Category", "Category")
                        .WithMany("Homeworks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("efcore_project.Models.Category", b =>
                {
                    b.Navigation("Homeworks");
                });
#pragma warning restore 612, 618
        }
    }
}
